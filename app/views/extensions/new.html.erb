<%= provide(:title, "Add #{t('indefinite_articles.extension')} #{t('nouns.extension').titleize}") %>

<div class="page resource extension_show" data-equalizer>
  <div class="main" data-equalizer-watch>
    <h1 class="heading">Add <%= t('indefinite_articles.extension') %> <%= t('nouns.extension').titleize %></h1>

    <%= form_for @extension, html: { "data-abide" => true } do |f| %>
      <%= render "application/form_errors", record: @extension %>

      <fieldset id="" class="">
        <legend>Use one of your GitHub repositories</legend>

        <div id="extensions-selector" class="name-field">
          <%# The contents of this +extensions-selector+ element get replaced almost immediately by
              the UJS code returned by the AJAX call made by the +getExtensionsForUser+ JS method. %>

          <p id="loading-extensions"><%= image_tag "spinner.gif" %> Loading your repositories...</p>
          <p id="loading-extensions-failed" style="display: none;">Loading your repositories failed...</p>
        </div>

        <%= f.hidden_field :github_url, id: "extension-url-field" %>
      </fieldset>

      <%- if policy(@extension).make_hosted_extension? %>
        <h3><em><strong>-OR-</strong></em></h3>
        <%= render 'extensions/file_upload', {f: f, file_method: :tmp_source_file} %>
      <% end %>

      <fieldset>
        <div class="description-field">
          <%= f.text_field :name, placeholder: "Name", title: "Name", required: true, id: "extension-name-field" %>
          <small class="error">Name is required.</small>
          <p class="hint-block">Please use title case for the name, e.g. My Gift to the Community.</p>
        </div>
        <div class="description-field">
          <%= f.text_field :description, placeholder: "Description", title: "Description", required: true, id: "extension-desc-field" %>
          <small class="error">Description is required.</small>
        </div>
        <div class="tag_tokens-field">
          <%= f.text_field :tag_tokens, placeholder: "Tags", title: "Tags", class: "tokenfield", data: { autofill: Tag::DEFAULT_TAGS } %>
        </div>

        <% if false # remove for Sensu %>
          <h2>Compatible Bonsai Versions</h2>
          <div class="compatible_platforms-field">
            <% SupportedPlatform.pluck(:name, :id).each do |name, id| %>
              <div>
                <label><%= f.check_box :compatible_platforms, { multiple: true }, id.to_s, nil %> <%= name %></label>
              </div>
            <% end %>
          </div>
        <% end %>
      </fieldset>

      <%= f.submit "Add #{t('nouns.extension').titleize}", class: "button primary radius" %>
    <% end %>
  </div>

  <div class="sidebar" data-equalizer-watch>
    <h3>Adding <%= t('indefinite_articles.extension') %> <%= t('nouns.extension').titleize %></h3>
    <p class="no-left-margin">Bonsai pulls in project details and release information from GitHub to populate <%= t('indefinite_articles.extension') %> <%= t('nouns.extension') %> page.
    To share <%= t('indefinite_articles.extension') %> <%= t('nouns.extension') %> on Bonsai, the <%= t('nouns.extension') %> should be in a public GitHub repository that includes:</p>
    <ul><li><a href=“https://help.github.com/articles/creating-releases/”>GitHub release tags</a></li>
    <li>A <code>bonsai.yml</code> <a href=“https://docs.sensu.io/sensu-go/latest/reference/assets#sharing-an-asset-on-bonsai”>configuration file</a> with the project description, platforms, asset filenames, and checksums.</li>
    <li>A helpful README following the <a href=“https://github.com/sensu/sensu-go-plugin”>template</a></li>
    <li>A license and code of conduct: Feel free to borrow from Sensu Go’s <a href=“https://github.com/sensu/sensu-go/blob/master/LICENSE”>MIT license</a> and <a href=“https://sensu.io/conduct/”>Community code of conduct</a>.</li></ul>
    <p class="no-left-margin">Going forward, Bonsai will automatically keep in sync with your GitHub releases. For more information about creating and sharing <%= t('nouns.extension') %>s, see the <a href”https://docs.sensu.io/sensu-go/latest/reference/assets”>Sensu docs</a> and the <a href=“https://github.com/sensu/sensu-go-plugin”>Sensu Go plugin template</a>.</p>
  </div>
</div>

<% content_for :script do %>

  <script>

    var retries = 0;
    var repos = [];

    var getExtensionsForUser = () => {
      $.ajax({
        url: '<%= accessible_repos_users_path %>',
        method: 'GET',
        dataType: 'script'
      });
    }

    var retryGetExtension = () => {
      if (retries < 5) {
        setTimeout(getExtensionsForUser, 3000);
      } else {
        $("#loading-extensions").remove();
        $("#loading-extensions-failed").show();
        clearTimeout(getExtensionsForUser);
      }
      retries += 1
    }

    var updateNameAndDescription = () => {
      var urlField = $("#extension-url-short-field");
      var repos = urlField.data("repos");
      var current = urlField.val();

      var repo = null;

      for (var i = 0; i < repos.length; i++) {
        if (repos[i].full_name == current) {
          repo = repos[i];
          break;
        }
      }

      if (repo) {
        $("#extension-url-field").val(repo.full_name);
        $("#extension-name-field").val(repo.name);
        $("#extension-desc-field").val(repo.description);
      }
    }

    $(document).ajaxComplete( () => {
      $("#extension-url-short-field").change( () => {
        updateNameAndDescription();
      });
    });

    getExtensionsForUser();
  
  </script>

<% end %>
